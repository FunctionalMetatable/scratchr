// Specs.as
// John Maloney, April 2010
//
// This file defines the command blocks and categories.
// To add a new command:
//		a. add a specification for the new command to the commands array
//		b. add a primitive for the new command to the interpreter

package {
	import fxgassets.blocks.*;

public class Specs {

	public static var controlCategory:int = 5;
	public static var variablesCategory:int = 8;
	public static var variableColor:int = 0xF3761D;
	public static var listCategory:int = 10;
	public static var undefinedColor:int = 0xFF0000;
	public static var unimplementedColor:int = 0x505050;

	public static function blockColor(categoryID:int):int {
		for each (var entry:Array in categories) {
			if (entry[0] == categoryID) return entry[2];
		}
		return undefinedColor;
	}

	public static function nameForCategory(categoryID:int):String {
		if (categoryID > 100) categoryID -= 100;
		for each (var entry:Array in categories) {
			if (entry[0] == categoryID) return entry[1];
		}
		return "Unknown";
	}

	public static var GET_VAR:String = "readVariable";
	public static var SET_VAR:String = "setVar:to:";
	public static var CHANGE_VAR:String = "changeVar:by:";
	public static var GET_LIST:String = "contentsOfList:";
	public static var CALL:String = "CALL";
	public static var PROCEDURE_DEF:String = "PROCEDURE_DEF";

	public static var categories:Array = [
	  // id   category name	  color
		[0,  "undefined",	0xD42828],
		[1,  "Motion",		0x4A6CD4],
		[2,  "Looks",		0x8F56E3],
		[3,  "Sound",		0xCF4AD9],
		[4,  "Pen",			0x00A178],
		[5,  "Control",		0xE6A822],
		[6,  "Sensing",		0x0494DC],
		[7,  "Operators",	0x62C213],
		[8,  "Variables",	variableColor],
		[9,  "Motor",		0x1B50B9],
		[10, "List",		0xD94D11],
		[98, "Obsolete", 	0xD42828],
		[99, "Experimental", 0xC0B000],
		[102, "Looks (stage)", 0x8F56E3],
	];

	public static var commands:Array = [
		// block specification					type, cat, opcode			default args (optional)
		// motion
		["move %n steps",						" ", 1, "forward:",			10],
		["turn @turnRight %n degrees",			" ", 1, "turnRight:",		15],
		["turn @turnLeft %n degrees",			" ", 1, "turnLeft:",		15],
		["--"],
		["point in direction %d.direction",		" ", 1, "heading:",			90],
		["point towards %m.spriteOrMouse",		" ", 1, "pointTowards:",	""],
		["--"],
		["go to x:%n y:%n",						" ", 1, "gotoX:y:"],
		["go to %m.spriteOrMouse",				" ", 1, "gotoSpriteOrMouse:", ""],
		["glide %n secs to x:%n y:%n",			" ", 1, "glideSecs:toX:y:elapsed:from:"],
		["--"],
		["change x by %n",						" ", 1, "changeXposBy:",	10],
		["set x to %n",							" ", 1, "xpos:",			0],
		["change y by %n",						" ", 1, "changeYposBy:",	10],
		["set y to %n",							" ", 1, "ypos:",			0],
		["--"],
		["if on edge, bounce",					" ", 1, "bounceOffEdge"],
		["--"],
		["x position",							"r", 1, "xpos"],
		["y position",							"r", 1, "ypos"],
		["direction",							"r", 1, "heading"],

		// looks
		["switch to costume %m.costume",		" ", 2, "lookLike:",		"Costume1"],
		["next costume",						" ", 2, "nextCostume"],
		["costume #",							"r", 2, "costumeIndex"],
		["-"],
		["say %s for %n secs",					" ", 2, "say:duration:elapsed:from:",	"Hello!", 2],
		["say %s",								" ", 2, "say:",							"Hello!"],
		["think %s for %n secs",				" ", 2, "think:duration:elapsed:from:",	"Hmm...", 2],
		["think %s",							" ", 2, "think:",						"Hmm..."],
		["-"],
		["change %m.effect effect by %n",		" ", 2, "changeGraphicEffect:by:",		"color", 25],
		["set %m.effect effect to %n",			" ", 2, "setGraphicEffect:to:",			"color", 0],
		["clear graphic effects",				" ", 2, "filterReset"],
		["-"],
		["change size by %n",					" ", 2, "changeSizeBy:",	 10],
		["set size to %n%",						" ", 2, "setSizeTo:", 		100],
		["size",								"r", 2, "scale"],
		["-"],
		["show",								" ", 2, "show"],
		["hide",								" ", 2, "hide"],
		["-"],
//		["clear text",							" ", 2, "CLR_TEXT"],
//		["print %s",							" ", 2, "PRINT",			"hello"],
//		["prs %s",								" ", 2, "PRS",				"hello "],
//		["-"],
		["go to front",							" ", 2, "comeToFront"],
		["go back %n layers",					" ", 2, "goBackByLayers:", 1],

		// stage looks
		["switch to background %m.costume",		" ", 102, "showBackground:", 			"background1"],
		["next background",						" ", 102, "nextBackground"],
		["background #",						"r", 102, "backgroundIndex"],
		["-"],
		["change %m.effect effect by %n",		" ", 102, "changeGraphicEffect:by:",	"color", 25],
		["set %m.effect effect to %n",			" ", 102, "setGraphicEffect:to:",		"color", 0],
		["clear graphic effects",				" ", 102, "filterReset"],

		// sound
		["play sound %m.sound",					" ", 3, "playSound:",			"pop"],
		["play sound %m.sound until done",		" ", 3, "doPlaySoundAndWait",	"pop"],
		["stop all sounds",						" ", 3, "stopAllSounds"],
		["-"],
		["play drum %d.drum for %n beats",		" ", 3, "drum:duration:elapsed:from:",		35, 0.2],
		["rest for %n beats",					" ", 3, "rest:elapsed:from:",				0.2],
		["-"],
		["play note %d.note for %n beats",		" ", 3, "noteOn:duration:elapsed:from:",	60, 0.5],
		["set instrument to %d.instrument",		" ", 3, "midiInstrument:",					1],
		["-"],
		["change volume by %n",					" ", 3, "changeVolumeBy:",	-10],
		["set volume to %n%",					" ", 3, "setVolumeTo:", 	100],
		["volume",								"r", 3, "volume"],
		["-"],
		["change tempo by %n",					" ", 3, "changeTempoBy:",	20],
		["set tempo to %n bpm",					" ", 3, "setTempoTo:",		60],
		["tempo",								"r", 3,  "tempo"],

		// pen
		["clear",								" ", 4, "clearPenTrails"],
		["-"],
		["pen down",							" ", 4, "putPenDown"],
		["pen up",								" ", 4, "putPenUp"],
		["-"],
		["set pen color to %c",					" ", 4, "penColor:"],
		["change pen color by %n",				" ", 4, "changePenHueBy:"],
		["set pen color to %n",					" ", 4, "setPenHueTo:", 0],
		["-"],
		["change pen shade by %n",				" ", 4, "changePenShadeBy:"],
		["set pen shade to %n",					" ", 4, "setPenShadeTo:",		50],
		["-"],
		["change pen size by %n",				" ", 4, "changePenSizeBy:",		1],
		["set pen size to %n",					" ", 4, "penSize:", 1],
		["-"],
		["stamp",								" ", 4, "stampCostume"],

		// stage pen
		["clear",								" ", 104, "clearPenTrails"],

		// control
		["when @greenFlag clicked",				"h", 5, "whenGreenFlag"],
		["when %m.key key pressed",				"h", 5, "whenKeyPressed", 		"space"],
		["when I am clicked",					"h", 5, "whenClicked"],
		["-"],
		["wait %n secs",						" ", 5, "wait:elapsed:from:",	1],
		["-"],
		["forever",								"cf",5, "doForever"],
		["repeat %n",							"c", 5, "doRepeat", 10],
		["-"],
		["broadcast %m.broadcast",				" ", 5, "broadcast:",			""],
		["broadcast %m.broadcast and wait",		" ", 5, "doBroadcastAndWait",	""],
		["when I receive %m.broadcast",			"h", 5, "whenIReceive",			""],
		["-"],
		["forever if %b",						"c", 5, "doForeverIf"],
		["if %b",								"c", 5, "doIf"],
		["if %b",								"e", 5, "doIfElse"],
		["wait until %b",						" ", 5, "doWaitUntil"],
		["repeat until %b",						"c", 5, "doUntil"],
		["-"],
		["stop script",							"f", 5, "doReturn"],
		["@stop stop all",						"f", 5, "stopAll"],
		["-"],
		["clone",								" ", 5, "clone"],
		["when cloned",							"h", 5, "whenCloned"],

		// sensing
		["touching %m.touching?",				"b", 6, "touching:",		""],
		["touching color %c?",					"b", 6, "touchingColor:"],
		["color %c is touching %c?",			"b", 6, "color:sees:"],
		["-"],
		["ask %s and wait",						" ", 6, "doAsk", 			"What's your name?"],
		["answer",								"r", 6, "answer"],
		["-"],
		["mouse x",								"r", 6, "mouseX"],
		["mouse y",								"r", 6, "mouseY"],
		["mouse down?",							"b", 6, "mousePressed"],
		["-"],
		["key %m.key pressed?",					"b", 6, "keyPressed:",		"space"],
		["-"],
		["distance to %m.spriteOrMouse",		"r", 6, "distanceTo:"],
		["-"],
		["reset timer",							" ", 6, "timerReset"],
		["timer",								"r", 6, "timer"],
		["-"],
		["%m.attribute of %m.spriteOrStage",	"r", 6, "getAttribute:of:",	"x position", ""],
		["-"],
		["loudness",							"r", 6, "soundLevel"],
		["loud?",								"b", 6, "isLoud"],
		["-"],
		["%m.sensor sensor value",				"r", 6, "sensor:", 			"slider"],
		["sensor %m.booleanSensor?",			"b", 6, "sensorPressed:", 	"button pressed"],

		// stage sensing
		["ask %s and wait",						" ", 106, "doAsk", 			"What's your name?"],
		["answer",								"r", 106, "answer"],
		["-"],
		["mouse x",								"r", 106, "mouseX"],
		["mouse y",								"r", 106, "mouseY"],
		["mouse down?",							"b", 106, "mousePressed"],
		["-"],
		["key %m.key pressed?",					"b", 106, "keyPressed:",		"space"],
		["-"],
		["reset timer",							" ", 106, "timerReset"],
		["timer",								"r", 106, "timer"],
		["-"],
		["%m.attribute of %m.spriteOrStage",	"r", 106, "getAttribute:of:",	"x position", ""],
		["-"],
		["loudness",							"r", 106, "soundLevel"],
		["loud?",								"b", 106, "isLoud"],
		["-"],
		["%m.sensor sensor value",				"r", 106, "sensor:", 			"slider"],
		["sensor %m.booleanSensor?",			"b", 106, "sensorPressed:", 	"button pressed"],

		// operators
		["%n + %n",								"r", 7, "+",					"", ""],
		["%n - %n",								"r", 7, "-",					"", ""],
		["%n * %n",								"r", 7, "*",					"", ""],
		["%n / %n",								"r", 7, "/",					"", ""],
		["-"],
		["pick random %n to %n",				"r", 7, "randomFrom:to:",		1, 10],
		["-"],
		["%s < %s",								"b", 7, "<",					"", ""],
		["%s = %s",								"b", 7, "=",					"", ""],
		["%s > %s",								"b", 7, ">",					"", ""],
		["-"],
		["%b and %b",							"b", 7, "&"],
		["%b or %b",							"b", 7, "|"],
		["not %b",								"b", 7, "not"],
		["-"],
		["join %s %s",							"r", 7, "concatenate:with:",	"hello ", "world"],
		["letter %n of %s",						"r", 7, "letter:of:",			1, "world"],
		["length of %s",						"r", 7, "stringLength:",		"world"],
		["-"],
		["%n mod %n",							"r", 7, "\\\\",					"", ""],
		["round %n",							"r", 7, "rounded", 				""],
		["-"],
		["%m.mathOp of %n",						"r", 7, "computeFunction:of:",	"sqrt", 10],

		// variables
		["set %v to %s",						" ", 8, SET_VAR,				"", 0],
		["change %v by %n",						" ", 8, CHANGE_VAR,				"", 10],
		["show variable %v",					" ", 8, "showVariable:",		""],
		["hide variable %v",					" ", 8, "hideVariable:",		""],

		// motor
		["motor on for %n secs",				" ", 9, "motorOnFor:elapsed:from:",	1],
		["motor on",							" ", 9, "allMotorsOn"],
		["motor off",							" ", 9, "allMotorsOff"],
		["motor power %n",						" ", 9, "startMotorPower:",			100],
		["motor direction %m.motorDirection",	" ", 9, "setMotorDirection:",		"this way"],

		// list
		["add %s to %m.listName",							" ", 10, "append:toList:",		"thing", ""],
		["-"],
		["delete %d.listDeleteItem of %m.listName",			" ", 10, "deleteLine:ofList:",	1, ""],
		["insert %s at %d.listItem of %m.listName",			" ", 10, "insert:at:ofList:",	"thing", 1, ""],
		["replace item %d.listItem of %m.listName with %s",	" ", 10, "setLine:ofList:to:",	1, "", "thing"],
		["-"],
		["item %d.listItem of %m.listName",					"r", 10, "getLine:ofList:",		1, ""],
		["length of %m.listName",							"r", 10, "lineCountOfList:",	""],
		["%m.listName contains %s",							"b", 10, "list:contains:",		"", "thing"],

		// obsolete blocks that may be used in older projects
		["abs %n",								"r", 98, "abs"],
		["sqrt %n",								"r", 98, "sqrt"],

		// experimental control prims
		["for each %v in %s",					"c", 99, "FOR_LOOP",	"v", 10],
		["defer display updates",				"c", 99, "SUSPEND_REDRAW"],
		["while %b",							"c", 99, "WHILE"],

		// testing
		["noop",								"r", 99, "COUNT"],
		["counter",								"r", 99, "COUNT"],
		["clear counter",						" ", 99, "CLR_COUNT"],
		["incr counter",						" ", 99, "INCR_COUNT"],
	];

	public static function IconNamed(name:String):* {
		if (name == "greenFlag") return new flagIcon();
		if (name == "random") return new randomIcon();
		if (name == "stop") return new stopIcon();
		if (name == "turnLeft") return new turnLeftIcon();
		if (name == "turnRight") return new turnRightIcon();
		return null;
	}

}}
